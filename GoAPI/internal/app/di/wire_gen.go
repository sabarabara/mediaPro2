// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"GoAPI/cmd/handler"
	"GoAPI/internal/app/controllers"
	"GoAPI/internal/app/core/domain/service/interface"
	"GoAPI/internal/app/frameworks"
	"GoAPI/internal/app/usecases"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeRouter() *gin.Engine {
	analyzingVoiceService := frameworks.NewAnalyzingVoiceService()
	createChattingInformation := frameworks.NewGeminiRequester()
	createVoiceService := frameworks.NewCreateVoiceService()
	chattingInformationFactory := usecases.NewChattingInformationFactory()
	createVoiceUsecaseImpl := usecases.NewCreateVoiceUsecaseImpl(analyzingVoiceService, createChattingInformation, createVoiceService, chattingInformationFactory)
	createVoiceController := controllers.NewCreateVoiceController(createVoiceUsecaseImpl)
	engine := handlers.SetupRouter(createVoiceController)
	return engine
}

// wire.go:

var createVoiceUsecaseSet = wire.NewSet(usecases.NewCreateVoiceUsecaseImpl, wire.Bind(new(abstract.CreateVoiceUsecase), new(*usecases.CreateVoiceUsecaseImpl)))

var factorySet = wire.NewSet(usecases.NewChattingInformationFactory)
